/*
** Header only library to generate to translate scalar values to colors.
** available : PLASMA , MAGMA , INFERNO , VIRIDIS
*/
#ifndef CMAP_H_
#define CMAP_H_
#include <algorithm>
#include <vector>

#define NCOLORS 100

double PLASMA[] = {0.050383, 0.029803, 0.527975,  //
                   0.075353, 0.027206, 0.538007,  //
                   0.10598,  0.024309, 0.551368,  //
                   0.123903, 0.022878, 0.559423,  //
                   0.148607, 0.021154, 0.570562,  //
                   0.16407,  0.020171, 0.577478,  //
                   0.186213, 0.018803, 0.587228,  //
                   0.207435, 0.017442, 0.596333,  //
                   0.221197, 0.016497, 0.602083,  //
                   0.241396, 0.014979, 0.610259,  //
                   0.254627, 0.013882, 0.615419,  //
                   0.274191, 0.012109, 0.622722,  //
                   0.293478, 0.010213, 0.62949,   //
                   0.30621,  0.008902, 0.633694,  //
                   0.32515,  0.006915, 0.639512,  //
                   0.337683, 0.005618, 0.643049,  //
                   0.356359, 0.003798, 0.64781,   //
                   0.368733, 0.002724, 0.650601,  //
                   0.387183, 0.001434, 0.654177,  //
                   0.405503, 0.000678, 0.656977,  //
                   0.417642, 0.000564, 0.65839,   //
                   0.435734, 0.001127, 0.659797,  //
                   0.447714, 0.00208,  0.66024,   //
                   0.46555,  0.004545, 0.660139,  //
                   0.48321,  0.00846,  0.659095,  //
                   0.494877, 0.01199,  0.657865,  //
                   0.512206, 0.018833, 0.655209,  //
                   0.523633, 0.024532, 0.652901,  //
                   0.54057,  0.03495,  0.64864,   //
                   0.551715, 0.043136, 0.645277,  //
                   0.568201, 0.055778, 0.639477,  //
                   0.584391, 0.068579, 0.632812,  //
                   0.595011, 0.07719,  0.627917,  //
                   0.610667, 0.090204, 0.619951,  //
                   0.620919, 0.098934, 0.614257,  //
                   0.636008, 0.112092, 0.605205,  //
                   0.650746, 0.125309, 0.595617,  //
                   0.660374, 0.134144, 0.588971,  //
                   0.674522, 0.147419, 0.578688,  //
                   0.683758, 0.156278, 0.57166,   //
                   0.697324, 0.169573, 0.560919,  //
                   0.710549, 0.182868, 0.550004,  //
                   0.719181, 0.191729, 0.542663,  //
                   0.731862, 0.205013, 0.531601,  //
                   0.740143, 0.213864, 0.524216,  //
                   0.752312, 0.227133, 0.513149,  //
                   0.760264, 0.235976, 0.505794,  //
                   0.771958, 0.249237, 0.494813,  //
                   0.783383, 0.2625,   0.483918,  //
                   0.790855, 0.271345, 0.476706,  //
                   0.801855, 0.284626, 0.465971,  //
                   0.809052, 0.293491, 0.45887,   //
                   0.819651, 0.306812, 0.448306,  //
                   0.830018, 0.320172, 0.437836,  //
                   0.836801, 0.329105, 0.430905,  //
                   0.846788, 0.342551, 0.420579,  //
                   0.853319, 0.351553, 0.413734,  //
                   0.862927, 0.365119, 0.403519,  //
                   0.869203, 0.374212, 0.396738,  //
                   0.878423, 0.387932, 0.3866,    //
                   0.887402, 0.401762, 0.376494,  //
                   0.89325,  0.411048, 0.369768,  //
                   0.901807, 0.425087, 0.359688,  //
                   0.907365, 0.434524, 0.35297,   //
                   0.915471, 0.448807, 0.34289,   //
                   0.923287, 0.463251, 0.332801,  //
                   0.928329, 0.472975, 0.326067,  //
                   0.93563,  0.487712, 0.315952,  //
                   0.940313, 0.497642, 0.309197,  //
                   0.947051, 0.512699, 0.299049,  //
                   0.953428, 0.52796,  0.288883,  //
                   0.957469, 0.53825,  0.282096,  //
                   0.963203, 0.553865, 0.271909,  //
                   0.966798, 0.564396, 0.265118,  //
                   0.971835, 0.580382, 0.254931,  //
                   0.974947, 0.591165, 0.248151,  //
                   0.979233, 0.607532, 0.238013,  //
                   0.983041, 0.624131, 0.227937,  //
                   0.985301, 0.63533,  0.221265,  //
                   0.98826,  0.652325, 0.211364,  //
                   0.989935, 0.663787, 0.204859,  //
                   0.991985, 0.681179, 0.195295,  //
                   0.993456, 0.69881,  0.186041,  //
                   0.994103, 0.710698, 0.180097,  //
                   0.994553, 0.728728, 0.171622,  //
                   0.994495, 0.74088,  0.166335,  //
                   0.993851, 0.759304, 0.159092,  //
                   0.993033, 0.77172,  0.154808,  //
                   0.991209, 0.790537, 0.149377,  //
                   0.988648, 0.809579, 0.145357,  //
                   0.986509, 0.822401, 0.143557,  //
                   0.982653, 0.841812, 0.142303,  //
                   0.979644, 0.854866, 0.142453,  //
                   0.974443, 0.874622, 0.144061,  //
                   0.968443, 0.894564, 0.147014,  //
                   0.964021, 0.90795,  0.14937,   //
                   0.956808, 0.928152, 0.152409,  //
                   0.951726, 0.941671, 0.152925,  //
                   0.944152, 0.961916, 0.146861,  //
                   0.940015, 0.975158, 0.131326}; //

double MAGMA[] = {0.001462, 0.000466, 0.013866,  //
                  0.003279, 0.002305, 0.023708,  //
                  0.007588, 0.006356, 0.044973,  //
                  0.011465, 0.009828, 0.06075,   //
                  0.018815, 0.016026, 0.084584,  //
                  0.024792, 0.020715, 0.100676,  //
                  0.03552,  0.028397, 0.125209,  //
                  0.048062, 0.036607, 0.150327,  //
                  0.056615, 0.04216,  0.167446,  //
                  0.069764, 0.049726, 0.193735,  //
                  0.078815, 0.054184, 0.211667,  //
                  0.092949, 0.059904, 0.239164,  //
                  0.107899, 0.064335, 0.267289,  //
                  0.118405, 0.066479, 0.286321,  //
                  0.135053, 0.068391, 0.315,     //
                  0.146785, 0.068738, 0.334011,  //
                  0.165308, 0.067911, 0.361816,  //
                  0.178212, 0.066576, 0.379497,  //
                  0.198177, 0.063862, 0.404009,  //
                  0.218512, 0.061158, 0.425392,  //
                  0.232077, 0.059889, 0.437695,  //
                  0.25222,  0.059415, 0.453248,  //
                  0.265447, 0.060237, 0.46184,   //
                  0.284951, 0.063168, 0.472451,  //
                  0.304081, 0.067835, 0.480812,  //
                  0.316654, 0.07169,  0.48538,   //
                  0.335308, 0.078236, 0.491024,  //
                  0.347636, 0.082946, 0.494121,  //
                  0.366012, 0.090314, 0.49796,   //
                  0.378211, 0.095332, 0.500067,  //
                  0.396467, 0.102902, 0.502658,  //
                  0.414709, 0.110431, 0.504662,  //
                  0.426877, 0.115395, 0.505714,  //
                  0.445163, 0.122724, 0.506901,  //
                  0.457386, 0.127522, 0.507448,  //
                  0.47578,  0.134577, 0.507921,  //
                  0.494258, 0.141462, 0.507988,  //
                  0.506629, 0.145958, 0.507806,  //
                  0.52527,  0.152569, 0.507192,  //
                  0.537755, 0.156894, 0.506551,  //
                  0.556571, 0.163269, 0.50523,   //
                  0.57549,  0.16953,  0.503466,  //
                  0.588158, 0.173652, 0.502035,  //
                  0.607238, 0.179779, 0.499492,  //
                  0.620005, 0.18384,  0.497524,  //
                  0.639216, 0.189921, 0.49415,   //
                  0.652056, 0.193986, 0.491611,  //
                  0.671349, 0.200133, 0.487358,  //
                  0.690661, 0.206384, 0.482558,  //
                  0.703532, 0.210638, 0.479049,  //
                  0.722805, 0.217194, 0.473316,  //
                  0.735616, 0.221713, 0.46918,   //
                  0.754737, 0.228772, 0.462509,  //
                  0.773695, 0.236249, 0.455289,  //
                  0.786212, 0.241514, 0.450184,  //
                  0.804752, 0.249911, 0.442102,  //
                  0.816914, 0.255895, 0.436461,  //
                  0.834791, 0.26554,  0.427671,  //
                  0.846416, 0.272473, 0.421631,  //
                  0.86332,  0.283729, 0.412403,  //
                  0.879464, 0.296125, 0.403118,  //
                  0.889731, 0.305079, 0.397002,  //
                  0.904281, 0.31961,  0.388137,  //
                  0.913354, 0.330052, 0.382563,  //
                  0.925937, 0.346844, 0.374959,  //
                  0.937221, 0.364929, 0.368567,  //
                  0.944006, 0.377643, 0.365136,  //
                  0.953099, 0.397563, 0.361438,  //
                  0.958464, 0.411324, 0.360014,  //
                  0.965549, 0.432519, 0.359529,  //
                  0.971582, 0.45421,  0.36103,   //
                  0.975082, 0.468861, 0.363111,  //
                  0.979645, 0.491014, 0.367783,  //
                  0.982279, 0.505851, 0.371874,  //
                  0.985693, 0.528148, 0.379371,  //
                  0.987646, 0.543015, 0.38521,   //
                  0.990138, 0.565296, 0.395122,  //
                  0.992196, 0.587502, 0.406299,  //
                  0.993326, 0.602275, 0.41439,   //
                  0.994738, 0.62435,  0.427397,  //
                  0.99548,  0.639027, 0.436607,  //
                  0.996341, 0.660969, 0.45116,   //
                  0.996925, 0.682828, 0.466526,  //
                  0.997186, 0.697349, 0.477182,  //
                  0.997351, 0.719089, 0.493755,  //
                  0.997341, 0.733545, 0.505167,  //
                  0.997138, 0.75519,  0.522806,  //
                  0.996898, 0.769591, 0.534892,  //
                  0.996369, 0.791167, 0.553499,  //
                  0.99568,  0.812706, 0.572645,  //
                  0.995131, 0.827052, 0.585701,  //
                  0.994222, 0.84854,  0.605696,  //
                  0.993545, 0.862859, 0.619299,  //
                  0.99244,  0.88433,  0.640099,  //
                  0.991332, 0.905763, 0.661309,  //
                  0.99057,  0.920049, 0.675675,  //
                  0.989434, 0.94147,  0.697519,  //
                  0.988717, 0.955742, 0.712242,  //
                  0.987691, 0.977154, 0.734536,  //
                  0.987053, 0.991438, 0.749504}; //

double INFERNO[] = {0.001462, 0.000466, 0.013866,  //
                    0.003299, 0.002249, 0.024239,  //
                    0.007676, 0.006136, 0.046836,  //
                    0.011663, 0.009417, 0.06346,   //
                    0.019373, 0.015133, 0.088767,  //
                    0.025793, 0.019331, 0.10593,   //
                    0.037668, 0.025921, 0.132232,  //
                    0.051644, 0.032474, 0.159254,  //
                    0.06134,  0.03659,  0.177642,  //
                    0.076637, 0.041905, 0.205799,  //
                    0.087411, 0.044556, 0.224813,  //
                    0.104551, 0.047008, 0.25343,   //
                    0.122908, 0.047536, 0.281624,  //
                    0.135778, 0.046856, 0.299776,  //
                    0.15585,  0.044559, 0.325338,  //
                    0.169575, 0.042489, 0.340874,  //
                    0.190367, 0.039309, 0.361447,  //
                    0.204209, 0.037632, 0.373238,  //
                    0.224763, 0.036405, 0.388129,  //
                    0.244967, 0.037055, 0.400007,  //
                    0.258234, 0.038571, 0.406485,  //
                    0.27785,  0.042353, 0.414392,  //
                    0.290763, 0.045644, 0.418637,  //
                    0.309935, 0.051407, 0.423721,  //
                    0.328921, 0.057827, 0.427511,  //
                    0.3415,   0.062325, 0.429425,  //
                    0.360284, 0.069247, 0.431497,  //
                    0.372768, 0.073915, 0.4324,    //
                    0.391453, 0.080927, 0.433109,  //
                    0.403894, 0.08558,  0.433179,  //
                    0.422549, 0.092501, 0.432714,  //
                    0.441207, 0.099338, 0.431594,  //
                    0.453651, 0.103848, 0.430498,  //
                    0.472328, 0.110547, 0.428334,  //
                    0.484789, 0.114974, 0.426548,  //
                    0.503493, 0.121575, 0.423356,  //
                    0.522206, 0.12815,  0.419549,  //
                    0.534683, 0.132534, 0.416667,  //
                    0.553392, 0.139134, 0.411829,  //
                    0.565854, 0.143567, 0.408258,  //
                    0.584521, 0.150294, 0.402385,  //
                    0.603139, 0.157151, 0.395891,  //
                    0.615513, 0.161817, 0.391219,  //
                    0.633998, 0.168992, 0.383704,  //
                    0.64626,  0.173914, 0.378359,  //
                    0.66454,  0.181539, 0.369846,  //
                    0.676638, 0.186807, 0.363849,  //
                    0.694627, 0.195021, 0.354388,  //
                    0.712396, 0.203656, 0.344383,  //
                    0.724103, 0.20967,  0.337424,  //
                    0.741423, 0.219112, 0.326576,  //
                    0.752794, 0.225706, 0.319085,  //
                    0.769556, 0.236077, 0.307485,  //
                    0.785929, 0.247056, 0.295477,  //
                    0.796607, 0.254728, 0.287264,  //
                    0.812239, 0.266786, 0.274661,  //
                    0.822386, 0.275197, 0.266085,  //
                    0.837165, 0.288385, 0.252988,  //
                    0.846709, 0.297559, 0.244113,  //
                    0.860533, 0.311892, 0.230606,  //
                    0.873741, 0.326906, 0.216886,  //
                    0.882188, 0.337287, 0.207628,  //
                    0.894305, 0.353399, 0.193584,  //
                    0.902003, 0.364492, 0.184116,  //
                    0.912966, 0.381636, 0.169755,  //
                    0.923215, 0.399359, 0.155193,  //
                    0.929644, 0.411479, 0.145367,  //
                    0.938675, 0.430091, 0.130438,  //
                    0.944285, 0.442772, 0.120354,  //
                    0.952075, 0.462178, 0.105031,  //
                    0.959114, 0.482014, 0.089499,  //
                    0.963387, 0.495462, 0.079073,  //
                    0.969163, 0.515946, 0.063488,  //
                    0.97259,  0.529798, 0.053324,  //
                    0.977092, 0.55085,  0.03905,   //
                    0.979666, 0.565057, 0.031409,  //
                    0.982881, 0.586606, 0.024661,  //
                    0.985315, 0.608422, 0.024202,  //
                    0.986502, 0.623105, 0.027814,  //
                    0.987622, 0.64532,  0.039886,  //
                    0.987926, 0.66025,  0.05175,   //
                    0.987714, 0.682807, 0.072489,  //
                    0.986694, 0.70554,  0.095694,  //
                    0.985566, 0.720782, 0.112229,  //
                    0.983196, 0.743758, 0.138453,  //
                    0.981173, 0.759135, 0.156863,  //
                    0.977497, 0.782258, 0.185923,  //
                    0.974638, 0.797692, 0.206332,  //
                    0.969783, 0.820825, 0.238686,  //
                    0.964394, 0.843848, 0.273391,  //
                    0.960626, 0.859069, 0.29801,   //
                    0.954997, 0.881569, 0.337475,  //
                    0.951546, 0.896226, 0.365627,  //
                    0.947594, 0.917399, 0.410665,  //
                    0.946403, 0.937159, 0.458592,  //
                    0.947937, 0.949318, 0.491426,  //
                    0.954529, 0.965896, 0.540361,  //
                    0.961812, 0.975924, 0.571925,  //
                    0.976511, 0.989753, 0.61676,   //
                    0.988362, 0.998364, 0.644924}; //

double VIRIDIS[] = {0.267004, 0.004874, 0.329415,  //
                    0.269944, 0.014625, 0.341379,  //
                    0.273809, 0.031497, 0.358853,  //
                    0.276022, 0.044167, 0.370164,  //
                    0.278791, 0.062145, 0.386592,  //
                    0.280267, 0.073417, 0.397163,  //
                    0.281924, 0.089666, 0.412415,  //
                    0.28291,  0.105393, 0.426902,  //
                    0.283197, 0.11568,  0.436115,  //
                    0.283072, 0.130895, 0.449241,  //
                    0.282623, 0.140926, 0.457517,  //
                    0.281412, 0.155834, 0.469201,  //
                    0.279574, 0.170599, 0.479997,  //
                    0.278012, 0.180367, 0.486697,  //
                    0.275191, 0.194905, 0.496005,  //
                    0.273006, 0.20452,  0.501721,  //
                    0.269308, 0.218818, 0.509577,  //
                    0.26658,  0.228262, 0.514349,  //
                    0.262138, 0.242286, 0.520837,  //
                    0.257322, 0.25613,  0.526563,  //
                    0.253935, 0.265254, 0.529983,  //
                    0.248629, 0.278775, 0.534556,  //
                    0.244972, 0.287675, 0.53726,   //
                    0.239346, 0.300855, 0.540844,  //
                    0.233603, 0.313828, 0.543914,  //
                    0.229739, 0.322361, 0.545706,  //
                    0.223925, 0.334994, 0.548053,  //
                    0.220057, 0.343307, 0.549413,  //
                    0.214298, 0.355619, 0.551184,  //
                    0.210503, 0.363727, 0.552206,  //
                    0.204903, 0.375746, 0.553533,  //
                    0.19943,  0.387607, 0.554642,  //
                    0.19586,  0.395433, 0.555276,  //
                    0.190631, 0.407061, 0.556089,  //
                    0.187231, 0.414746, 0.556547,  //
                    0.182256, 0.426184, 0.55712,   //
                    0.177423, 0.437527, 0.557565,  //
                    0.174274, 0.445044, 0.557792,  //
                    0.169646, 0.456262, 0.55803,   //
                    0.166617, 0.463708, 0.558119,  //
                    0.162142, 0.474838, 0.55814,   //
                    0.157729, 0.485932, 0.558013,  //
                    0.154815, 0.493313, 0.55784,   //
                    0.150476, 0.504369, 0.55743,   //
                    0.147607, 0.511733, 0.557049,  //
                    0.143343, 0.522773, 0.556295,  //
                    0.140536, 0.530132, 0.555659,  //
                    0.136408, 0.541173, 0.554483,  //
                    0.132444, 0.552216, 0.553018,  //
                    0.129933, 0.559582, 0.551864,  //
                    0.126453, 0.570633, 0.549841,  //
                    0.124395, 0.578002, 0.548287,  //
                    0.121831, 0.589055, 0.545623,  //
                    0.120092, 0.600104, 0.54253,   //
                    0.119512, 0.607464, 0.540218,  //
                    0.119699, 0.61849,  0.536347,  //
                    0.120638, 0.625828, 0.533488,  //
                    0.123444, 0.636809, 0.528763,  //
                    0.126326, 0.644107, 0.525311,  //
                    0.132268, 0.655014, 0.519661,  //
                    0.14021,  0.665859, 0.513427,  //
                    0.146616, 0.67305,  0.508936,  //
                    0.157851, 0.683765, 0.501686,  //
                    0.166383, 0.690856, 0.496502,  //
                    0.180653, 0.701402, 0.488189,  //
                    0.196571, 0.711827, 0.479221,  //
                    0.20803,  0.718701, 0.472873,  //
                    0.226397, 0.728888, 0.462789,  //
                    0.239374, 0.735588, 0.455688,  //
                    0.259857, 0.745492, 0.444467,  //
                    0.281477, 0.755203, 0.432552,  //
                    0.296479, 0.761561, 0.424223,  //
                    0.319809, 0.770914, 0.411152,  //
                    0.335885, 0.777018, 0.402049,  //
                    0.360741, 0.785964, 0.387814,  //
                    0.377779, 0.791781, 0.377939,  //
                    0.404001, 0.800275, 0.362552,  //
                    0.430983, 0.808473, 0.346476,  //
                    0.449368, 0.813768, 0.335384,  //
                    0.477504, 0.821444, 0.318195,  //
                    0.496615, 0.826376, 0.306377,  //
                    0.525776, 0.833491, 0.288127,  //
                    0.555484, 0.840254, 0.269281,  //
                    0.575563, 0.844566, 0.256415,  //
                    0.606045, 0.850733, 0.236712,  //
                    0.626579, 0.854645, 0.223353,  //
                    0.657642, 0.860219, 0.203082,  //
                    0.678489, 0.863742, 0.189503,  //
                    0.709898, 0.868751, 0.169257,  //
                    0.741388, 0.873449, 0.149561,  //
                    0.762373, 0.876424, 0.137064,  //
                    0.79376,  0.880678, 0.120005,  //
                    0.814576, 0.883393, 0.110347,  //
                    0.845561, 0.887322, 0.099702,  //
                    0.876168, 0.891125, 0.09525,   //
                    0.89632,  0.893616, 0.096335,  //
                    0.926106, 0.89733,  0.104071,  //
                    0.945636, 0.899815, 0.112838,  //
                    0.974417, 0.90359,  0.130215,  //
                    0.993248, 0.906157, 0.143936}; //

static void interpolated_color(double *val, double &vmin, double &inv_delta,
                               double *cmap, double *color) {
  double normalized_val = (NCOLORS - 2) * (*val - vmin) * inv_delta;
  unsigned int i0 = normalized_val;
  unsigned int i1 = (double)1 + normalized_val;
  double coef = (normalized_val - (double)i0);
  color[0] = cmap[i0 * 3] * coef + cmap[i1 * 3] * (1 - coef);
  color[1] = cmap[i0 * 3 + 1] * coef + cmap[i1 * 3 + 1] * (1 - coef);
  color[2] = cmap[i0 * 3 + 2] * coef + cmap[i1 * 3 + 2] * (1 - coef);
}

static void nearest_color(double *val, double &vmin, double &inv_delta,
                          double *cmap, double *color) {
  unsigned int i = (NCOLORS - 1) * (*val - vmin) * inv_delta + 0.5;
  color[0] = cmap[i * 3];
  color[1] = cmap[i * 3 + 1];
  color[2] = cmap[i * 3 + 2];
}

void get_interpolated_colors(std::vector<double> &values,
                             std::vector<double> &colors, double *cmap) {
  auto [min, max] = std::minmax_element(values.begin(), values.end());
  double minv = *min, maxv = *max;
  double inv_delta = 1 / (maxv - minv);
  colors.resize(values.size() * 3);
  for (unsigned int i = 0; i < values.size(); ++i) {
    interpolated_color(&values[i], minv, inv_delta, cmap, &colors[i * 3]);
  }
}

void get_interpolated_colors(std::vector<double> &values,
                             std::vector<double> &colors, double *cmap,
                             double &minv, double &maxv) {
  colors.resize(values.size() * 3);
  double inv_delta = 1 / (maxv - minv);
  for (unsigned int i = 0; i < values.size(); ++i) {
    interpolated_color(&values[i], minv, inv_delta, cmap, &colors[i * 3]);
  }
}

void get_nearest_colors(std::vector<double> &values,
                        std::vector<double> &colors, double *cmap) {
  auto [min, max] = std::minmax_element(values.begin(), values.end());
  double minv = *min, maxv = *max;
  double inv_delta = 1 / (maxv - minv);
  colors.resize(values.size() * 3);
  for (unsigned int i = 0; i < values.size(); ++i) {
    nearest_color(&values[i], minv, inv_delta, cmap, &colors[i * 3]);
  }
}

void get_nearest_colors(std::vector<double> &values,
                        std::vector<double> &colors, double *cmap, double &minv,
                        double &maxv) {
  double inv_delta = 1 / (maxv - minv);
  colors.resize(values.size() * 3);
  for (unsigned int i = 0; i < values.size(); ++i) {
    nearest_color(&values[i], minv, inv_delta, cmap, &colors[i * 3]);
  }
}

#endif // CMAP_H_
